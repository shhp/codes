import java.io.*;import java.util.Arrays;import java.util.ArrayList;import java.util.ArrayDeque;import java.util.Scanner;import java.util.Collections;import java.util.HashMap;public class CandySplitting{	public static void main(String[] args){		Scanner scanner = null;		FileOutputStream outputFile = null;					try{			File inputData = new File("large.in");			scanner = new Scanner(inputData);			/* Firstly, read the case counts N */			int caseNumber = scanner.nextInt();			/* Solve cases one by one */						StringBuilder output = new StringBuilder();			int[] candy;			int sumOfCandy;			for(int i = 1; i <= caseNumber; i++){				System.out.println("--------Case #" + i + "---------");						int N = scanner.nextInt();				candy = new int[N];				sumOfCandy = 0;				for(int j = 0; j < N; ++j){					candy[j] = scanner.nextInt();					sumOfCandy += candy[j];				}								Arrays.sort(candy);								//System.out.println(Arrays.toString(candy));							output.append("Case #").append(i).append(": ");											output.append(canBeSplitted(candy) ? sumOfCandy - candy[0] : "NO").append("\n");			}			outputFile = new FileOutputStream(new File("output_large.txt"));			outputFile.write(output.toString().getBytes(),0,output.toString().length());			System.out.println(output.toString());								}				catch(Exception e){			e.printStackTrace();		}		finally{			try{				if(scanner != null)					scanner.close();				if(outputFile != null)					outputFile.close();			}catch(Exception e){			e.printStackTrace();			}					}	}		/* Sum of 1s in each bit should be even */	static boolean canBeSplitted(int[] candy){		int index = 0;		int sumOf1s;		while(index < 31){			sumOf1s = 0;			int testBit = 1 << index;			for(int value : candy){				if((value & testBit) > 0)					sumOf1s++;			}			if(sumOf1s % 2 > 0)				return false;						index++;		}				return true;	}	}